# 101-lazy_matrix_mul.txt
===============================
 How to Use 101-lazy_matrix_mul.py
===============================

	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Good arguments
==============

::

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	array([[ 7, 10],
	       [15, 22]])

::

	>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
	array([[13, 16]])

Bad arguments
==============

::

	>>> lazy_matrix_mul(1, [[3, 4], [5, 6]])
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

::

	>>> lazy_matrix_mul([[1, 2], [3, 4]], 3)
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

::

	>>> lazy_matrix_mul([1], [[3, 4], [5, 6]])
	Traceback (most recent call last):
	ValueError: shapes (1,) and (2,2) not aligned: 1 (dim 0) != 2 (dim 0)

::

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [3])
	Traceback (most recent call last):
	ValueError: shapes (2,2) and (1,) not aligned: 2 (dim 1) != 1 (dim 0)

::

	>>> lazy_matrix_mul([], [[3, 4], [5, 6]])
	Traceback (most recent call last):
	ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

::

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
	Traceback (most recent call last):
	ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

::

	>>> lazy_matrix_mul([['1', 2], [3, 4]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	TypeError: invalid data type for einsum

::

	>>> lazy_matrix_mul([[1, 2]], [[3, '4'], [5, 6]])
	Traceback (most recent call last):
	TypeError: invalid data type for einsum

::

	>>> lazy_matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence.

::

	>>> lazy_matrix_mul([[1, 2]], [[3], [5, 6]])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence.

::

	>>> lazy_matrix_mul([[0, 1, 2]], [[3, 4], [5, 6]])
	Traceback (most recent call last):
	ValueError: shapes (1,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

::

	>>> lazy_matrix_mul([[0, 1, 2]])
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

::

	>>> lazy_matrix_mul()
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
